<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:System="clr-namespace:System;assembly=mscorlib">
    
    <System:Double x:Key="CaptionHeight">26</System:Double>
    <Style TargetType="{x:Type Window}" x:Key="VSLike">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="3" GlassFrameThickness="1" ResizeBorderThickness="8" UseAeroCaptionButtons="False" CaptionHeight="{DynamicResource CaptionHeight}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background"
				Value="{DynamicResource ThemeBrushKey}" />
        <Setter Property="Foreground"
				Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="BorderBrush"
				Value="{DynamicResource AccentBrushKey}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Padding"
				Value="0" />
        <Setter Property="SnapsToDevicePixels"
				Value="True" />
        <Setter Property="UseLayoutRounding"
				Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Name="border"
                        Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <TextBlock Text="{TemplateBinding Title}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="6,3,12,3" FontSize="14.667" />
                                <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <Button Content="0" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.MinimizeWindowCommand}" CommandParameter="{Binding ElementName=target}"/>
                                    <Button x:Name="Maximize" Content="1" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.MaximizeWindowCommand}" CommandParameter="{Binding ElementName=target}" Visibility="Visible"/>
                                    <Button x:Name="Restore" Content="2" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.RestoreWindowCommand}" CommandParameter="{Binding ElementName=target}" Visibility="Collapsed"/>
                                    <Button Content="r" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.CloseWindowCommand}" CommandParameter="{Binding ElementName=target}"/>
                                </StackPanel>
                            </Grid>
                            <Grid Grid.Row="1">

                                <Border  Background="{DynamicResource AccentBrushKey}" Height="23" VerticalAlignment="Bottom" >
                                    <Grid>
                                        <ResizeGrip x:Name="WindowResizeGrip" Visibility="Collapsed" IsTabStop="false" Style="{DynamicResource VSResizeGrip}"/>
                                    </Grid>
                                </Border>
                                
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Grid>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="border" Property="BorderThickness" Value="8" />
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState"
					 Value="Maximized">
                <Setter Property="BorderThickness"
						Value="0" />
                <Setter Property="Padding"
						Value="8" />
            </Trigger>
            <Trigger Property="IsActive"
					 Value="False">
                <Setter Property="BorderBrush"
						Value="{DynamicResource BorderBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Window}" x:Key="VSLikeSub">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="3" GlassFrameThickness="1" ResizeBorderThickness="8" UseAeroCaptionButtons="False" CaptionHeight="{DynamicResource CaptionHeight}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background"
				Value="{DynamicResource ThemeBrushKey}" />
        <Setter Property="Foreground"
				Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="BorderBrush"
				Value="{DynamicResource AccentBrushKey}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Padding"
				Value="0" />
        <Setter Property="SnapsToDevicePixels"
				Value="True" />
        <Setter Property="UseLayoutRounding"
				Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Name="border"
                        Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <TextBlock Text="{TemplateBinding Title}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="6,3,12,3" FontSize="14.667" />
                                <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <Button Content="r" Style="{DynamicResource CaptionButtonStyleKey}" Command="{x:Static SystemCommands.CloseWindowCommand}" CommandParameter="{Binding ElementName=target}"/>
                                </StackPanel>
                            </Grid>
                            <Grid Grid.Row="1">
                                <ResizeGrip x:Name="WindowResizeGrip" Visibility="Collapsed" IsTabStop="false" Style="{DynamicResource VSResizeGrip}"/>
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState"
					 Value="Maximized">
                <Setter Property="BorderThickness"
						Value="0" />
                <Setter Property="Padding"
						Value="8" />
            </Trigger>
            <Trigger Property="IsActive"
					 Value="False">
                <Setter Property="BorderBrush"
						Value="{DynamicResource BorderBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CaptionButtonStyleKey" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="FontFamily" Value="Marlett"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid >
                        <Border x:Name="border" SnapsToDevicePixels="True" VerticalAlignment="Bottom">
                            <TextBlock TextAlignment="Center" >
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="5,8,5,5"/>
                                </TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
					 Value="True">
                            <Setter Property="Background" TargetName="border"
						Value="{DynamicResource ActiveBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" TargetName="border"
						Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground"
						Value="{DynamicResource ActiveForegroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
					 Value="True">
                            <Setter Property="Background" TargetName="border"
						Value="{DynamicResource AccentBrushKey}" />
                            <Setter Property="BorderBrush" TargetName="border"
						Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground" 
						Value="{DynamicResource AccentForegroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
					 Value="False">
                            <Setter Property="Opacity"
						Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
</ResourceDictionary>